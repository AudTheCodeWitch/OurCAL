{"version":3,"sources":["CodeWitchLogo.png","components/Header.js","components/BlockHeader.js","components/Pixel.js","actions/addPixel.js","actions/colorPixel.js","components/BlankBlock.js","components/BlockForm.js","actions/postBlock.js","actions/createBlock.js","actions/clearBlock.js","components/Palette.js","actions/changeColor.js","components/PaletteForm.js","actions/setPen.js","containers/NewBlockContainer.js","components/CompleteBlock.js","components/DeleteButton.js","components/ShowButton.js","components/Card.js","actions/destroyBlock.js","actions/deleteBlock.js","containers/CardContainer.js","actions/fetchBlocks.js","containers/HomeContainer.js","components/ShowHeader.js","components/ShowBlock.js","components/ShowDetails.js","containers/ShowBlockContainer.js","containers/ShowContainer.js","components/About.js","components/Footer.js","App.js","serviceWorker.js","reducers/cardsReducer.js","reducers/blockTemplateReducer.js","reducers/paletteReducer.js","reducers/rootReducer.js","index.js"],"names":["module","exports","Header","to","BlockHeader","className","Pixel","handleClick","pen","event","alert","color","pixel","target","props","colors","bg","style","backgroundColor","colorPixel","id","split","x","this","column","y","row","color_variable","location","addPixel","onClick","Component","connect","state","blockTemplate","find","p","palette","type","payload","BlankBlock","createColumns","columns","Array","items","entries","index","key","push","rows","createBlock","BlockForm","handleChange","setState","name","value","handleSubmit","preventDefault","duplicate","document","getElementById","blockName","difficulty","username","email","postBlock","block","clearBlock","onSubmit","onChange","checked","details","console","log","blockData","pixels_attributes","user","dispatch","fetch","method","headers","Accept","body","JSON","stringify","then","r","json","Palette","displayColorPicker","e","handleClose","handleChangeComplete","button","changeColor","hex","currentColor","position","zIndex","top","right","bottom","left","onChangeComplete","React","data","PaletteForm","handlePenSelect","penNumber","setPen","createPenSelector","array","pens","NewBlockContainer","CompleteBlock","blank","pixels","box","colorPixels","DeleteButton","destroyBlock","handleDeleteClick","icon","faTimesCircle","ShowButton","faEye","Card","attributes","rating","deleteBlock","CardContainer","createCards","blocks","map","fetchBlocks","cards","all","resp","HomeContainer","ShowHeader","ShowBlock","b","ShowDetails","ShowBlockContainer","undefined","ShowContainer","match","params","About","href","Footer","src","CodeWitchLogo","alt","height","App","exact","path","component","Boolean","window","hostname","cardsReducer","action","indexOf","slice","blockTemplateReducer","parseInt","bgColor","submittedPixels","paletteReducer","c1","c2","c3","c4","c5","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.996280fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CodeWitchLogo.a6b16278.png\";","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h1><Link to={'/'}>OurCal: Community Graphghan</Link></h1>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\n// Functional component - instructions to create pattern\r\n\r\nconst BlockHeader = () => {\r\n  return (\r\n    <div className=\"block-header\">\r\n      <h2>Create A Block</h2>\r\n      <ol>\r\n        <li>\r\n          Use the color pickers to set your colors. You may use up to 6 colors\r\n          in your block, and you can change the colors at any time.\r\n        </li>\r\n        <li>Select a color radio button to set your active color.</li>\r\n        <li>\r\n          Click on a box to fill it in with your chosen color. Click it again to\r\n          revert to the background color.\r\n        </li>\r\n        <li>Fill in the block details form and submit your creation!</li>\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockHeader;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPixel } from \"../actions/addPixel\";\r\nimport { colorPixel } from \"../actions/colorPixel\";\r\n\r\nclass Pixel extends Component {\r\n  handleClick = (pen, event) => {\r\n    if (pen === \"\") {\r\n      alert(\"Please select a pen first!\");\r\n    } else {\r\n      let pixel = event.target;\r\n      let color;\r\n\r\n      // Toggle between background and pen colors\r\n      if (pixel.className === `pixel ${pen}`) {\r\n        pixel.className = `pixel bg`;\r\n        color = this.props.colors.bg;\r\n      } else {\r\n        pixel.className = `pixel ${pen}`;\r\n        color = this.props.colors[pen];\r\n      }\r\n      pixel.style.backgroundColor = color;\r\n      this.props.colorPixel(pixel.id.split(\"-\")[1], pen, color);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let x = this.props.column + 1;\r\n    let y = 25 - this.props.row;\r\n    let pixel = {\r\n      x: x,\r\n      y: y,\r\n      color: this.props.colors.bg,\r\n      color_variable: \"bg\"\r\n    };\r\n    if (this.props.location === \"Template\") {\r\n      //  Add pixel to store\r\n      this.props.addPixel(pixel);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { location, column, row, pen, colors, color } = this.props;\r\n    if (location === \"Template\") {\r\n      return (\r\n        <div\r\n          className={\"pixel bg\"}\r\n          id={location + \"-\" + (column + 1) + \", \" + (25 - row)}\r\n          style={{ backgroundColor: colors[`${color}`] }}\r\n          onClick={event => {\r\n            this.handleClick(pen, event);\r\n          }}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className=\"pixel bg\"\r\n          id={location + \"-\" + (column + 1) + \",\" + (25 - row)}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const pixel = state.blockTemplate.blockTemplate.find(\r\n    p => p.x === props.column + 1 && p.y === 25 - props.row\r\n  );\r\n  let color_variable = \"bg\";\r\n  if (pixel) {\r\n    color_variable = pixel.color_variable;\r\n  }\r\n  return {\r\n    colors: state.palette.colors,\r\n    pen: state.palette.pen,\r\n    color: color_variable\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addPixel, colorPixel })(Pixel);\r\n","export function addPixel(p) {\r\n  return { type: \"ADD_PIXEL\", payload: p };\r\n}\r\n","export function colorPixel(id, pen, color) {\r\n  const payload = {\r\n    id: id,\r\n    pen: pen,\r\n    color: color\r\n  };\r\n  return { type: \"COLOR_PIXEL\", payload };\r\n}\r\n","import React from \"react\";\r\nimport Pixel from \"./Pixel\";\r\n\r\n// Functional component - Create a 25x25 block of blank pixels\r\n\r\nconst BlankBlock = () => {\r\n  const createColumns = row => {\r\n    // Create 25 column divs\r\n    const columns = new Array(25);\r\n    const items = [];\r\n    for (const [index] of columns.entries()) {\r\n      let p = (\r\n        <Pixel key={index} row={row} column={index} location=\"Template\" />\r\n      );\r\n      items.push(p);\r\n    }\r\n    return items;\r\n  };\r\n\r\n  const createBlock = () => {\r\n    // Create 25 row divs\r\n    const rows = new Array(25);\r\n    const items = [];\r\n    for (const [index] of rows.entries()) {\r\n      items.push(\r\n        <div key={index} className=\"row\" id={\"row-\" + (index + 1)}>\r\n          {createColumns(index)}\r\n        </div>\r\n      );\r\n    }\r\n    return items;\r\n  };\r\n\r\n  return <div className=\"template block\">{createBlock()}</div>;\r\n};\r\n\r\nexport default BlankBlock;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postBlock } from \"../actions/postBlock\";\r\nimport { clearBlock } from \"../actions/clearBlock\";\r\n\r\n// Class component - form for block details\r\n\r\nclass BlockForm extends Component {\r\n  // Set local state\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      blockName: \"\",\r\n      difficulty: \"\",\r\n      username: \"\",\r\n      email: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    // Update local state on change\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    // Submit form - update store\r\n    event.preventDefault();\r\n    const duplicate = document.getElementById(this.state.blockName);\r\n    // Alerts to prevent incomplete data\r\n    if (this.state.blockName === \"\") {\r\n      return alert(\"Please name your block\");\r\n    } else if (duplicate) {\r\n      return alert(\"Block name must be unique\");\r\n    } else if (this.state.difficulty === \"\") {\r\n      return alert(\"Please select a difficulty rating\");\r\n    } else if (this.state.username === \"\") {\r\n      return alert(\"Please enter your username\");\r\n    } else if (this.state.email === \"\") {\r\n      return alert(\"Please enter your email\");\r\n    } else {\r\n      // Add block to database using postBlock(blockDetails, blockData) action\r\n      this.props.postBlock(this.state, this.props.block);\r\n      // Reset the block template with clearBlock(blockData) action\r\n      this.props.clearBlock(this.props.block);\r\n      // Reset the local state\r\n      this.setState({\r\n        blockName: \"\",\r\n        difficulty: \"\",\r\n        username: \"\",\r\n        email: \"\"\r\n      });\r\n      alert(\"Success!\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"block-details\">\r\n        <form\r\n          onSubmit={event => this.handleSubmit(event)}\r\n          className=\"block-form\"\r\n        >\r\n          <h2>Block Details</h2>\r\n          Block name:\r\n          <br />\r\n          <input\r\n            onChange={event => this.handleChange(event)}\r\n            type=\"text\"\r\n            name=\"blockName\"\r\n            value={this.state.blockName}\r\n          />\r\n          <br />\r\n          <input\r\n            onChange={event => this.handleChange(event)}\r\n            type=\"radio\"\r\n            checked={this.state.difficulty === \"Beginner\"}\r\n            name=\"difficulty\"\r\n            value=\"Beginner\"\r\n          />\r\n          Beginner\r\n          <br />\r\n          <input\r\n            onChange={event => this.handleChange(event)}\r\n            type=\"radio\"\r\n            checked={this.state.difficulty === \"Intermediate\"}\r\n            name=\"difficulty\"\r\n            value=\"Intermediate\"\r\n          />\r\n          Intermediate\r\n          <br />\r\n          <input\r\n            onChange={event => this.handleChange(event)}\r\n            type=\"radio\"\r\n            checked={this.state.difficulty === \"Advanced\"}\r\n            name=\"difficulty\"\r\n            value=\"Advanced\"\r\n          />\r\n          Advanced\r\n          <br />\r\n          <br />\r\n          Username:\r\n          <br />\r\n          <input\r\n            onChange={event => this.handleChange(event)}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={this.state.username}\r\n          />\r\n          <br />\r\n          Email:\r\n          <br />\r\n          <input\r\n            onChange={event => this.handleChange(event)}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n          />\r\n          <br />\r\n          <br />\r\n          <input id=\"create\" type=\"submit\" value=\"Create Block\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Get block data from store\r\nconst mapStateToProps = state => {\r\n  return { block: state.blockTemplate.blockTemplate };\r\n};\r\n\r\nexport default connect(mapStateToProps, { postBlock, clearBlock })(BlockForm);\r\n","import { createBlock } from \"./createBlock\";\r\n\r\n// Posts block to db\r\n\r\nexport function postBlock(details, block) {\r\n  console.log(details);\r\n\r\n  let blockData = {\r\n    // Format data to send to database\r\n    block: {\r\n      name: details.blockName,\r\n      pixels_attributes: block\r\n    },\r\n    difficulty: details.difficulty,\r\n    user: {\r\n      email: details.email,\r\n      username: details.username\r\n    }\r\n  };\r\n  console.log(blockData);\r\n\r\n  return dispatch =>\r\n    // fetch(\"http://localhost:3000/api/blocks\", {\r\n    fetch(\"/blocks\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify(blockData)\r\n    })\r\n      .then(r => r.json())\r\n      .then(block => {\r\n        // Take returned block data from db and use it to add block to store\r\n        dispatch(createBlock(block));\r\n      });\r\n}\r\n","export function createBlock(block) {\r\n  return { type: \"CREATE_BLOCK\", block };\r\n}","export function clearBlock(block) {\r\n  return { type: \"CLEAR_BLOCK\", block };\r\n}\r\n","import React from 'react'\r\nimport { ChromePicker } from 'react-color'\r\nimport { connect } from \"react-redux\";\r\nimport { changeColor } from \"../actions/changeColor\";\r\n\r\nclass Palette extends React.Component {\r\n    state = {\r\n        displayColorPicker: false,\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        let button = this.props.id === 'background' ? 'bg' : `c${this.props.id}`;\r\n        this.props.changeColor(button, color.hex)\r\n    };\r\n\r\n    render() {\r\n        const popover = {\r\n            position: 'absolute',\r\n            zIndex: '2',\r\n        };\r\n        const cover = {\r\n            position: 'fixed',\r\n            top: '0px',\r\n            right: '0px',\r\n            bottom: '0px',\r\n            left: '0px',\r\n        };\r\n        const currentColor = this.props.id === 'background' ? 'bg' : `c${this.props.id}`;\r\n        return (\r\n            <div>\r\n                <button id={\"Color \" + this.props.id}\r\n                        onClick={ this.handleClick }\r\n                        style={{backgroundColor: this.props.colors[currentColor]}}\r\n                >\r\n                    {this.props.id === 'background' ? 'Background Color' : `Color ${this.props.id}`}\r\n                </button>\r\n                { this.state.displayColorPicker ? <div style={ popover }>\r\n                    <div style={ cover } onClick={ this.handleClose }/>\r\n                    <ChromePicker color={this.props.colors[currentColor]} onChangeComplete={this.handleChangeComplete} />\r\n                </div> : null }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { colors: state.palette.colors };\r\n};\r\n\r\nexport default connect(mapStateToProps, {changeColor})(Palette);\r\n","export function changeColor(button, color) {\r\n  let data = { button: button, color: color };\r\n  return { type: \"CHANGE_COLOR\", data };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Palette from \"./Palette\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPen } from \"../actions/setPen\";\r\n\r\n// Class component - form to select pen\r\n\r\nclass PaletteForm extends Component {\r\n  handlePenSelect = penNumber => {\r\n    // Dispatch setPen action\r\n    this.props.setPen(penNumber);\r\n  };\r\n\r\n  createPenSelector = () => {\r\n    // Create palette and radio button for 5 colors (not including background)\r\n    const array = new Array(5);\r\n    const pens = [];\r\n    for (const [index] of array.entries()) {\r\n      pens.push(\r\n        <li key={index}>\r\n          <Palette id={index + 1} />\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            name=\"pen\"\r\n            id={\"pen \" + (index + 1)}\r\n            onClick={() => this.handlePenSelect(\"c\" + (index + 1))}\r\n          />\r\n        </li>\r\n      );\r\n    }\r\n    return pens;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"palette-form\">\r\n          <ul id=\"palette\">\r\n            <li>\r\n              {/* Background color selector - no radio button */}\r\n              <Palette id={\"background\"} />\r\n              <br />\r\n              Select your pen:\r\n            </li>\r\n            {/* Color selectors and radio buttons */}\r\n            {this.createPenSelector()}\r\n          </ul>\r\n        </form>\r\n        <div id=\"pen\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setPen })(PaletteForm);\r\n","export function setPen(penNumber) {\r\n  return { type: \"SET_PEN\", penNumber: penNumber };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport BlockHeader from \"../components/BlockHeader\";\r\nimport BlankBlock from \"../components/BlankBlock\";\r\nimport BlockForm from \"../components/BlockForm\";\r\nimport PaletteForm from \"../components/PaletteForm\";\r\n\r\n// New block template - instructions, blank block, form, and color palette\r\n\r\nclass NewBlockContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"block-container\">\r\n        <BlockHeader />\r\n        <BlankBlock />\r\n        <BlockForm />\r\n        <PaletteForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewBlockContainer;\r\n","import React, {Component} from \"react\";\r\nimport Pixel from \"./Pixel\";\r\n\r\n// Class component - complete block with colored pixels\r\n\r\nclass CompleteBlock extends Component {\r\n\r\n  createColumns = (row, location) => {\r\n                                         const columns = new Array(25);\r\n                                         const items = [];\r\n                                         for (const [\r\n                                           index\r\n                                         ] of columns.entries()) {\r\n                                           let p = (\r\n                                             <Pixel\r\n                                               key={index}\r\n                                               row={row}\r\n                                               column={index}\r\n                                               location={location}\r\n                                             />\r\n                                           );\r\n                                           items.push(p);\r\n                                         }\r\n                                         return items;\r\n                                       };\r\n\r\n    createBlock = (block) => {\r\n        const rows = new Array(25);\r\n        const items = [];\r\n        for (const [index] of rows.entries()) {\r\n            items.push(<div key={index} className='row' id={'row-'+(index+1)}>\r\n                {this.createColumns(index, block.name)}\r\n            </div>)\r\n        }\r\n        return items\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Set bg color for pixels based on location\r\n        let colorPixels = (blank, pixels) => {\r\n            for (let p of pixels) {\r\n                let box = document.getElementById(`${blank.id}-${p.x},${p.y}`);\r\n                box.style.backgroundColor = p.color;\r\n                box.className = `pixel ${p.color_variable}`;\r\n            }\r\n        };\r\n        let b = document.getElementById(this.props.block.name);\r\n        colorPixels(b, this.props.block.pixels)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='block' id={this.props.block.name}>\r\n                {this.createBlock(this.props.block)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CompleteBlock;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\n// Functional component - delete button\r\n\r\nconst DeleteButton = ({ destroyBlock, id }) => {\r\n  const handleDeleteClick = id => {\r\n    destroyBlock(id);\r\n  };\r\n\r\n  return (\r\n    <button onClick={e => handleDeleteClick(id)} className=\"fa-times-circle\">\r\n      <FontAwesomeIcon icon={faTimesCircle} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// Functional component\r\n\r\nconst ShowButton = () => {\r\n  return (\r\n    <button className=\"viewButton\">\r\n      <FontAwesomeIcon icon={faEye} /> View Larger\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ShowButton;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CompleteBlock from \"./CompleteBlock\";\r\nimport { destroyBlock } from \"../actions/destroyBlock\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport ShowButton from \"./ShowButton\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n// Class component - card for completed block\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"card\"\r\n        id={this.props.block.id + \"-\" + this.props.block.attributes.name}\r\n      >\r\n        <DeleteButton\r\n          /* Destroy block in db and remove from store */\r\n          destroyBlock={this.props.destroyBlock}\r\n          id={this.props.block.id}\r\n        />\r\n\r\n        <h3>{this.props.block.attributes.name}</h3>\r\n        <div className=\"block\">\r\n          {/* Display block */}\r\n          <CompleteBlock block={this.props.block.attributes} />\r\n        </div>\r\n        <ul>\r\n          <li>{this.props.block.attributes.difficulty.rating}</li>\r\n          <li>{this.props.block.attributes.user.username}</li>\r\n          <li>\r\n            {/* Show page for block */}\r\n            <Link to={`/blocks/${this.props.block.id}`}>\r\n              <ShowButton/>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { destroyBlock })(Card);\r\n","import { deleteBlock } from \"./deleteBlock\";\r\n\r\nexport function destroyBlock(id) {\r\n  return dispatch => {\r\n    // fetch(`http://localhost:3000/api/blocks/${id}`, { method: \"DELETE\" })\r\n    fetch(`/blocks/${id}`, { method: \"DELETE\" })\r\n      .then(dispatch(deleteBlock(id))\r\n    );\r\n  };\r\n}","export function deleteBlock(id) {\r\n  return { type: \"DELETE_BLOCK\", id };\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Card from \"../components/Card\";\r\nimport { fetchBlocks } from \"../actions/fetchBlocks\";\r\n\r\nclass CardContainer extends Component {\r\n  createCards = blocks => {\r\n    // Create a card for each block from store\r\n    return blocks.map(block => {\r\n      return <Card block={block} key={block.id} />;\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Fetch blocks from db once component loads to DOM\r\n    this.props.fetchBlocks();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card-container\">\r\n        <h2>View Blocks</h2>\r\n        <div className=\"cards\">{this.createCards(this.props.cards)}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // Get cards from store\r\n  return { cards: state.cards.all };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchBlocks })(CardContainer);\r\n","export function fetchBlocks() {\r\n  // Fetch all blocks from db\r\n  return dispatch => {\r\n    // fetch(\"http://localhost:3000/api/blocks\", {\r\n    fetch(\"/blocks\")\r\n      .then(resp => resp.json())\r\n      .then(blocks =>\r\n        dispatch({\r\n          type: \"FETCH_BLOCKS\",\r\n          payload: blocks.data\r\n        })\r\n      );\r\n  };\r\n}","import React from \"react\";\r\nimport NewBlockContainer from \"./NewBlockContainer\";\r\nimport CardContainer from \"./CardContainer\";\r\n\r\n// Home page - blank block template and cards of completed blocks\r\n\r\nclass HomeContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <NewBlockContainer />\r\n        <br />\r\n        <CardContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\n\r\n// Functional component - name of block\r\n\r\nconst ShowHeader = props => {\r\n  return (\r\n    <div className=\"block-header\">\r\n      <h2>{props.name}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowHeader;\r\n","import React, { Component } from \"react\";\r\nimport Pixel from \"./Pixel\";\r\n\r\nclass ShowBlock extends Component {\r\n  createColumns = (row, location) => {\r\n    const columns = new Array(25);\r\n    const items = [];\r\n    for (const [index] of columns.entries()) {\r\n      let p = (\r\n        <Pixel\r\n          key={index}\r\n          row={row}\r\n          column={index}\r\n          location={\"View\" + location}\r\n        />\r\n      );\r\n      items.push(p);\r\n    }\r\n    return items;\r\n  };\r\n\r\n  createBlock = block => {\r\n    const rows = new Array(25);\r\n    const items = [];\r\n    for (const [index] of rows.entries()) {\r\n      items.push(\r\n        <div key={index} className=\"row\" id={\"row-\" + (index + 1)}>\r\n          {this.createColumns(index, block.name)}\r\n        </div>\r\n      );\r\n    }\r\n    return items;\r\n  };\r\n\r\n  colorPixels = (blank, pixels) => {\r\n    for (let p of pixels) {\r\n      let box = document.getElementById(`${blank.id}-${p.x},${p.y}`);\r\n      box.style.backgroundColor = p.color;\r\n      box.className = `pixel ${p.color_variable}`;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let b = document.getElementById(\"View\" + this.props.block.name);\r\n    this.colorPixels(b, this.props.block.pixels);\r\n  }\r\n\r\n  componentDidUpdate(props) {\r\n    let b = document.getElementById(\"View\" + this.props.block.name);\r\n    this.colorPixels(b, this.props.block.pixels);\r\n  }\r\n\r\n  render() {\r\n    let id = \"View\" + this.props.block.name;\r\n    return (\r\n      <div className=\"block\" id={id}>\r\n        {this.createBlock(this.props.block)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowBlock;\r\n","import React from \"react\";\r\n\r\n// Functional component - block details\r\n\r\nconst ShowDetails = props => {\r\n  return (\r\n    <div className=\"block-details\">\r\n      <h3>Designed by: {props.username}</h3>\r\n      <h3>Difficulty: {props.difficulty}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowDetails;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ShowHeader from \"../components/ShowHeader\";\r\nimport ShowBlock from \"../components/ShowBlock\";\r\nimport ShowDetails from \"../components/ShowDetails\";\r\n\r\nclass ShowBlockContainer extends Component {\r\n  render() {\r\n    let block = this.props.block;\r\n    if (block !== undefined) {\r\n      return (\r\n        <div className=\"block-container\">\r\n          <ShowHeader name={block.attributes.name} />\r\n          <ShowBlock block={block.attributes} />\r\n          <ShowDetails\r\n            username={block.attributes.user.username}\r\n            difficulty={block.attributes.difficulty.rating}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <h2>Your block is loading.</h2>;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  let block = state.cards.all.find(b => b.id === props.id);\r\n  return { block: block };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShowBlockContainer);\r\n","import React from \"react\";\r\nimport CardContainer from \"./CardContainer\";\r\nimport ShowBlockContainer from \"./ShowBlockContainer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ShowContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        {/* Render block and details */}\r\n        <ShowBlockContainer id={this.props.id} />\r\n        <br />\r\n        {/* Render cards from db */}\r\n        <CardContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return { id: props.match.params.id };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShowContainer);\r\n","import React from \"react\";\r\n\r\n// Functional component - about page\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"About\">\r\n      <h2>About OurCal</h2>\r\n      <p>\r\n        OurCal is a community-generated Crochet-Along (CAL). Anyone can design a\r\n        block using the graphghan generator and submit it to our database. Users\r\n        can then view one another's blocks and implement their favorites in a\r\n        one-of-a-kind blanket!\r\n      </p>\r\n      <h2>Future Features</h2>\r\n      <p>\r\n        Before we launch, there are a few more odds and ends to tie up:\r\n        <ul>\r\n          <li>Add user sessions</li>\r\n          <li>Add the ability to edit one's submitted patterns</li>\r\n          <li>Add the ability to view patterns by designer</li>\r\n        </ul>\r\n        After launch, we'll add some additional features:\r\n        <ul>\r\n          <li>View other's patterns in your color scheme</li>\r\n          <li>Arrange selected blocks on a blanket template</li>\r\n          <li>Generate written instructions for patterns</li>\r\n          <li>Add a print-friendly view of patterns with instructions</li>\r\n          <li>\r\n            Have an idea?{\" \"}\r\n            <a href={\"https://github.com/AudTheCodeWitch/OurCAL/issues/new\"}>\r\n              Submit a feature request!\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport CodeWitchLogo from \"../CodeWitchLogo.png\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <ul>\r\n      <li>©2019 Audrea Cook</li>\r\n        <li><Link to={'/about'}>About Us</Link></li>\r\n      <li>\r\n        <img src={CodeWitchLogo} alt=\"AudTheCodeWitch Logo\" height=\"50px\" />\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport HomeContainer from \"./containers/HomeContainer\";\r\nimport ShowContainer from \"./containers/ShowContainer\";\r\nimport About from \"./components/About\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header>\r\n          {/*  Header component */}\r\n          <Header />\r\n        </header>\r\n        {/*  Set routes to home, about, and show pages */}\r\n        <Route exact path=\"/\" component={HomeContainer} />\r\n        <Route exact path=\"/about\" component={About} />\r\n        <Route path=\"/blocks/:id\" component={ShowContainer} />\r\n        <footer>\r\n          {/* Footer component */}\r\n          <Footer />\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","function cardsReducer(state = { all: [] }, action) {\r\n  switch (action.type) {\r\n    case \"FETCH_BLOCKS\":\r\n      // Retrieve all blocks from db\r\n      return { all: action.payload };\r\n    case \"CREATE_BLOCK\":\r\n      // Add new block to store\r\n      return {\r\n        all: [...state.all, action.block.data]\r\n      };\r\n    case \"DELETE_BLOCK\":\r\n      let block = state.all.find(b => b.id === action.id);\r\n      let index = state.all.indexOf(block);\r\n      // Remove chosen block from store\r\n      return {\r\n        all: [...state.all.slice(0, index), ...state.all.slice(index + 1)]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default cardsReducer;\r\n","function blockTemplateReducer(\r\n  state = {\r\n    blockTemplate: []\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case \"ADD_PIXEL\":\r\n      return {\r\n        blockTemplate: [...state.blockTemplate, action.payload]\r\n      };\r\n    case \"COLOR_PIXEL\":\r\n      let pixel = state.blockTemplate.find(\r\n        p =>\r\n          p.x === parseInt(action.payload.id.split(\", \")[0]) &&\r\n          p.y === parseInt(action.payload.id.split(\", \")[1])\r\n      );\r\n      let index = state.blockTemplate.indexOf(pixel);\r\n      pixel.color = action.payload.color;\r\n      pixel.color_variable = action.payload.pen;\r\n      return {\r\n        blockTemplate: [\r\n          ...state.blockTemplate.slice(0, index),\r\n          pixel,\r\n          ...state.blockTemplate.slice(index + 1)\r\n        ]\r\n      };\r\n    case \"CHANGE_COLOR\":\r\n      let pixels = state.blockTemplate.map(p =>\r\n        p.color_variable === action.data.button\r\n          ? { ...p, color: action.data.color }\r\n          : p\r\n      );\r\n      return {\r\n        ...state,\r\n        blockTemplate: pixels\r\n      };\r\n    case \"CLEAR_BLOCK\":\r\n      // Resets all pixels in the block template to background colors\r\n      let bgColor = action.block.find(p => p.color_variable === \"bg\");\r\n      bgColor = bgColor.color;\r\n      let submittedPixels = state.blockTemplate.map(p => {\r\n        return { ...p, color: bgColor, color_variable: \"bg\" };\r\n      });\r\n      return {\r\n        ...state,\r\n        blockTemplate: submittedPixels\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default blockTemplateReducer;\r\n","function paletteReducer(\r\n  state = {\r\n    colors: {\r\n      bg: \"#fff\",\r\n      c1: \"#fff\",\r\n      c2: \"#fff\",\r\n      c3: \"#fff\",\r\n      c4: \"#fff\",\r\n      c5: \"#fff\"\r\n    },\r\n    pen: \"\"\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case \"CHANGE_COLOR\":\r\n      let button = action.data.button;\r\n      let color = action.data.color;\r\n      return {\r\n        ...state,\r\n        colors: {\r\n          ...state.colors,\r\n          [button]: color\r\n        }\r\n      };\r\n    case \"SET_PEN\":\r\n      // Update pen selection in store\r\n      return {\r\n        ...state,\r\n        pen: action.penNumber\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default paletteReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport cardsReducer from \"./cardsReducer\";\r\nimport blockTemplateReducer from \"./blockTemplateReducer\";\r\nimport paletteReducer from \"./paletteReducer\";\r\n\r\n// Combines separate reducers into single reducer for store\r\n\r\nconst rootReducer = combineReducers({\r\n  cards: cardsReducer,\r\n  blockTemplate: blockTemplateReducer,\r\n  palette: paletteReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// Create store using rootReducer to combine all the reducers\r\n// Use applyMiddleware to enable thunk\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  // Wrap entire app in provider to give all components access to the store\r\n  <Provider store={store}>\r\n      {/* Wrap entire app in router to add routes */}\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}